{% from 'pkgs/ferm/defaults.sls' import conf with context -%}
{% from 'pkgs/ferm/defaults.sls' import service_map with context -%}
domain (ip ip6) {
    table filter {

        {% if salt.pkg.version('sshguard') %}
        chain sshguard { }
        {% endif %}

        chain INPUT {
            policy DROP;

            # connection tracking
            mod state state INVALID DROP;
            mod state state (ESTABLISHED RELATED) ACCEPT;

            # allow local packet
            interface lo ACCEPT;

            # respond to ping
            proto icmp ACCEPT; 

            # allow local SSH connections
            proto tcp dport ssh saddr 10.0.0.0/8 ACCEPT;

            # package-based rules:{% for svc in service_map -%}
            {% if salt['pkg.version'](svc['package']) %}
            # package: {{ svc['package'] }}{% for rule in svc['rules'] %}
            {{ rule }};{% endfor %}{% endif %}{%- endfor %}

            {% if conf['additional_rules']['inbound'] %}
            # pillar-based rules:{% for rule in conf['additional_rules']['inbound'] %}
            {{ rule }};{% endfor %}
            {%- endif %}
        }
        chain OUTPUT {
            policy ACCEPT;

            # connection tracking
            mod state state INVALID DROP;
            mod state state (ESTABLISHED RELATED) ACCEPT;

            {% if conf['additional_rules']['outbound'] %}
            # pillar-based rules:{% for rule in conf['additional_rules']['outbound'] %}
            {{ rule }};{% endfor %}
            {%- endif %}
        }
        chain FORWARD {
            policy DROP;

            # connection tracking
            mod state state INVALID DROP;
            mod state state (ESTABLISHED RELATED) ACCEPT;

            {% if conf['additional_rules']['forward'] %}
            # pillar-based rules:{% for rule in conf['additional_rules']['forward'] %}
            {{ rule }};{% endfor %}
            {%- endif %}
        }
    }
}
