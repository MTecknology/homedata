pipeline:

  debian-tests:
    image: gitlight/deb-testing-py3
    pull: true
    commands:
      - export LANG='C.UTF-8'
      - . /venv/testenv/bin/activate
      - pip3 install --upgrade pip wheel
      - pip3 install -r requirements/tests.txt
      - make test
    when:
      event: [ push, pull_request ]

  lintcheck:
    group: checks
    image: gitlight/deb-testing-py3
    commands:
      - export LANG='C.UTF-8'
      - . /venv/testenv/bin/activate
      - pip3 install --upgrade pip wheel
      - pip3 install -r requirements/tests.txt
      - make lint
      - grep -q '^Your code.*10\.00/10' _build/lint.txt
    when:
      event: [ push, pull_request ]

  spellcheck:
    group: checks
    image: gitlight/deb-testing-py3
    commands:
      - export LANG='C.UTF-8'
      - . /venv/testenv/bin/activate
      - pip3 install --upgrade pip wheel
      - pip3 install -r requirements/docs.txt
      - make spell
      - '[ ! -s _build/spelling.txt ]'
    when:
      event: [ push, pull_request ]

  documentation:
    group: checks
    image: gitlight/deb-testing-py3
    commands:
      - export LANG='C.UTF-8'
      - . /venv/testenv/bin/activate
      - pip3 install --upgrade pip wheel
      - pip3 install -r requirements/docs.txt
      - make docs
    when:
      event: [ push, pull_request ]

  coverage:
    group: checks
    image: gitlight/deb-testing-py3
    commands:
      - export LANG='C.UTF-8'
      - . /venv/testenv/bin/activate
      - pip3 install --upgrade pip wheel
      - pip3 install -r requirements/tests.txt
      - make coverage
      - cat _build/coverage.txt
      - grep -q '^TOTAL.*100%' _build/coverage.txt
    when:
      event: [ push, pull_request ]

  upload-coverage:
    image: gitlight/deb-testing-py3
    commands:
      - export LANG='C.UTF-8'
      - . /venv/testenv/bin/activate
      - pip3 install --upgrade pip wheel
      - pip3 install -r requirements/tests.txt
      - pip3 install codacy-coverage
      - make coverage
      #- export CODACY_PROJECT_TOKEN=
      #- python-codacy-coverage -r _build/coverage.xml
    when:
      branch: develop
      event: [ push ]
